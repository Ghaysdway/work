Файловая система
● / - КОРЕНЬ (корневая директория) - начало
файловой системы
● /BIN (BINARIES) - бинарные файлы пользователя
● /SBIN (SYSTEM BINARIES) - системные
исполняемые файлы
● /ETC (ETCETERA) - конфигурационные файлы
● /DEV (DEVICES) - файлы устройств
● /PROC (PROCESS) - информация о процессах
● /TMP (TEMP) - временные файлы
● /USR (USER APPLICATIONS) - программы
пользователя
/HOME - домашняя папка
/BOOT - файлы загрузчика
/LIB (LIBRARY) - системные библиотеки
/OPT (OPTIONAL APPLICATIONS) - дополнительные
программы
/MNT (MOUNT) - монтирование
/MEDIA - съемные носители
/SYS (SYSTEM) - информация о системе
/VAR (VARIABLE) - переменные файлы
/VAR/LOG - файлы логов
/VAR/LIB - базы данных
/VAR/MAIL - почта
/VAR/LOCK - файлы блокировок
● /HOME - домашняя папка
● /BOOT - файлы загрузчика
● /LIB (LIBRARY) - системные библиотеки
● /OPT (OPTIONAL APPLICATIONS) - дополнительные
программы
/MNT (MOUNT) - монтирование
● /MEDIA - съемные носители
● /SYS (SYSTEM) - информация о системе
● /VAR (VARIABLE) - переменные файлы
/VAR/LOG - файлы логов
● /VAR/LIB - базы данных
● /VAR/MAIL - почта
● /VAR/LOCK - файлы блокировок

 Вход на сервер: Песочница: JSLinux
localhost —
это название сервера, его внутреннее имя. Вместо
него может быть IP адрес. 
~ —
это символ, который говорит о том, что работа
выполняется из домашней директории. 
# —
это символ суперадминистратора или
суперпользователя. 
Корневой раздел —
это начало файловой системы, обозначается
символом / и в нем находятся все папки, с которыми
происходит взаимодействие в процессе работы.
первые команды Linux
cd (change directory) Переход по определенному пути, смена текущего расположения
pwd (print working directory) Показать текущее расположение
ls (list) Показать список файлов, просмотр содержимого каталога
ls —
это команда, которая выводит информацию о файлах
или каталогах. Флаги или ключи идут со знаком минус
“-” и отделяются от команды и аргумента(ов)
пробелами.
Команда ls
-t
Имена файлов
сортируются не по
алфавиту, а по времени. 
-l
Вывод в длинном
формате. 
-a 
Вывод списка всех
файлов.
-h
Вывод размер файла в
“человекочитаемых”
единицах.
cd —
это команда, которая позволяет перейти по
определенному пути или зайти в какую-то папку. 

Больше команд Linux
mkdir (make directory) Создание папки -p очень важный параметр
touch Создание файла
cp (copy) Копирование
mv (move) Перемещение и переименование
rm (remove)Удаление файла/папки
*Иногда может удалять целые каталоги с файлами, но для этого нужен флаг -rf

Еще больше команд Linux
whoami Узнать, под каким именем мы работаем в системе
clear Очистить экран
tree Просмотр дерева каталогов
history Вывод истории
export_file Скачать файл из песочницы
date Вернуть текущую дату

Если экран забит лишней информацией, то команда clear очистит терминал.
Ctrl + L- очистить экран или команда clear

Показать содержимое директории и субдиректорий можно с помощью команды
tree. 

Работа с терминалом: управление, горячие клавиши
К началу строки Ctrl a>
Для
автозаполнения Tab>
Поиск по истории Ctrl r>
Завершить
процесс Ctrl c>
Посмотреть
историю Arrows up(down)

Работа с терминалом: создание структуры папок
Зайти в папку home - cd /home
Создать папку user1 - mkdir user1
Проверить, что папка создана, и что есть в этой папке - ls
Перейти в папку user1 - cd user1
Создать папку task1 - mkdir task1
Зайти в папку task1 - cd task1
Проверить разрешения и посмотреть на размер созданного файла - ls -l
Посмотреть, где мы находимся - pwd
В папке task1 создаем файл с расширением *.txt) - touch file1.txt

Работа с терминалом: упрощение - mkdir -p
Можно создавать файлы и папки одной строкой:
● mkdir -p /home/user2/task2/
● touch /home/user2/task2/file2.txt
● mkdir -p /home/user3/task3/
Флаг -p позволяет создать путь сокращение от path, если нужно создать папку и путь.
Скрипт — это небольшая программа, которая содержит последовательность действий, созданных для автоматического выполнения задачи. 

mkdir -p использование в скриптах
mkdir -p
Используют для скриптов, чтобы не возвращать ошибку, а убеждаться в наличии путей
Используется для избежания ошибок при повторных запусках команда создания папок

mkdir -p : логика работы с -p и без
Создать папку - mkdir /home/user2/task2/
Повторить команду с ключиком  -p  и создать весь путь - mkdir -p /home/user2/task2/
Ошибка: нет такого пути - mkdir: can't create directory '/home/user2/task2': No such file or directory

Полный/абсолютный путь — это путь, который начинается от корня "/" и описывает весь путь к файлу. Имя объекта начинается на « / » .
Относительный путь — это путь к файлу относительно текущей папки.

Закрепление материала по созданию папок и файлов
/home
ls -la /home/user2/task2/
pwd
cd /home

Посмотреть созданную папку - ls user1

Создать новую папку - mkdir -p user3/task3

Скопировать file2.txt из /home/user2/task2/file2.txt в home/user3/task3/ с переименованием - 
cp
/home/user2/task2/file2.txt
user3/task3/file3.txt

Создать папку task4 - mkdir -p /home/user4/task4

Создать файл file4 - touch /home/user4/task4/file4.txt


Проверить все пути - 
ls -a /
ls /home/
ls /home/user1/task1/
ls /home/user2/task2/
ls /home/user3/task3/
ls /home/user4/task4/

Посмотреть историю - history 
Скопировать file2 в папку /tmp -  
cp /home/user2/task2/file2.txt /tmp
ls /tmp/file2.txt
Скопировать спереименованием
cp /home/user3/task3/file3.txt
/tmp/newfile3.txt
Проверить - ls /tmp
Копирование папки (флаг -r) - 
cp -r /home/user2 /tmp/mydirectory
ls /tmp/

mv — это команда, которая позволяет перемещать и переименовывать, используя 2 аргумента: что переносим и куда переносим.
Перемещение и переименование файлов
● Переносить и копировать можно с переименованием: старое название → новое название
● При переименовании файл переносится в ту же локацию, только с другим именем.
 mv /opt/newfile /opt/newfile.txt
 mv /opt/newfile.txt /tmp/new_text
 rm /tmp/file2.txt
 ls /tmp

Удаление файлов и директорий
Удаление пустых папок - rmdir
Удаление файлов и папок - rm
Удаление иерархии с вложениями - rm -r 

История команд, экспорт истории
● Посмотреть историю можно при помощи команды history
● Вывод истории в файл скачать ее из браузера себе на свой компьютер:
history > /tmp/history.txt
export_file /tmp/history.txt

Полезные ссылки
● Основные linux-команды для новичка